# Rules in this file were initially inferred by Visual Studio IntelliCode from the D:\dev\Chip8Emulator\HJM.Chip8 codebase based on best match to current usage at 12/9/2020
# You can modify the rules from these initially generated values to suit your own policies
# You can learn more about editorconfig here: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
[*.cs]


#Core editorconfig formatting - indentation

#use soft tabs (spaces) for indentation
indent_style = space

#Formatting - new line options

#place else statements on a new line
csharp_new_line_before_else = true
#require members of object intializers to be on separate lines
csharp_new_line_before_members_in_object_initializers = true
#require braces to be on a new line for methods, control_blocks, types, and object_collection_array_initializers (also known as "Allman" style)
csharp_new_line_before_open_brace = methods, control_blocks, types, object_collection_array_initializers

#Formatting - organize using options

#do not place System.* using directives before other using directives
dotnet_sort_system_directives_first = false

#Formatting - spacing options

#require NO space between a cast and the value
csharp_space_after_cast = false
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_after_colon_in_inheritance_clause = true
#require a space after a keyword in a control flow statement such as a for loop
csharp_space_after_keywords_in_control_flow_statements = true
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_before_colon_in_inheritance_clause = true
#remove space within empty argument list parentheses
csharp_space_between_method_call_empty_parameter_list_parentheses = false
#remove space between method call name and opening parenthesis
csharp_space_between_method_call_name_and_opening_parenthesis = false
#do not place space characters after the opening parenthesis and before the closing parenthesis of a method call
csharp_space_between_method_call_parameter_list_parentheses = false
#remove space within empty parameter list parentheses for a method declaration
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
#place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.
csharp_space_between_method_declaration_parameter_list_parentheses = false

#Formatting - wrapping options

#leave code block on single line
csharp_preserve_single_line_blocks = true

#Style - Code block preferences

#prefer curly braces even for one line of code
csharp_prefer_braces = true:suggestion

#Style - expression bodied member options

#prefer block bodies for methods
csharp_style_expression_bodied_methods = false:suggestion

#Style - expression level options

#prefer the language keyword for member access expressions, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_member_access = true:suggestion

#Style - Expression-level  preferences

#prefer objects to be initialized using object initializers when possible
dotnet_style_object_initializer = true:suggestion

#Style - implicit and explicit types

#prefer explicit type over var in all cases, unless overridden by another code style rule
csharp_style_var_elsewhere = false:error
#prefer explicit type over var to declare variables with built-in system types such as int
csharp_style_var_for_built_in_types = false:error
#prefer explicit type over var when the type is already mentioned on the right-hand side of a declaration
csharp_style_var_when_type_is_apparent = false:error

#Style - language keyword and framework type options

#prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion

#Style - modifier options

#prefer accessibility modifiers to be declared except for public interface members. This will currently not differ from always and will act as future proofing for if C# adds default interface methods.
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

#Style - Modifier preferences

#when this rule is set to a list of modifiers, prefer the specified ordering.
csharp_preferred_modifier_order = public,private,protected,override,readonly,static:suggestion

#Style - qualification options

#prefer fields not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_field = false:suggestion
#prefer methods not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_method = false:suggestion
#prefer properties not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_property = false:suggestion

# XML comment analysis disabled
dotnet_diagnostic.SA0001.severity = none

# Invalid settings file
dotnet_diagnostic.SA0002.severity = error

# Keywords should be spaced correctly
dotnet_diagnostic.SA1000.severity = error

# Commas should be spaced correctly
dotnet_diagnostic.SA1001.severity = error

# Semicolons should be spaced correctly
dotnet_diagnostic.SA1002.severity = error

# Symbols should be spaced correctly
dotnet_diagnostic.SA1003.severity = error

# Documentation lines should begin with single space
dotnet_diagnostic.SA1004.severity = error

# Single line comments should begin with single space
dotnet_diagnostic.SA1005.severity = error

# Preprocessor keywords should not be preceded by space
dotnet_diagnostic.SA1006.severity = error

# Operator keyword should be followed by space
dotnet_diagnostic.SA1007.severity = warning

# Opening parenthesis should be spaced correctly
dotnet_diagnostic.SA1008.severity = error

# Closing parenthesis should be spaced correctly
dotnet_diagnostic.SA1009.severity = error

# Opening square brackets should be spaced correctly
dotnet_diagnostic.SA1010.severity = error

# Closing square brackets should be spaced correctly
dotnet_diagnostic.SA1011.severity = error

# Opening braces should be spaced correctly
dotnet_diagnostic.SA1012.severity = none

# Closing braces should be spaced correctly
dotnet_diagnostic.SA1013.severity = none

# Opening generic brackets should be spaced correctly
dotnet_diagnostic.SA1014.severity = error

# Closing generic brackets should be spaced correctly
dotnet_diagnostic.SA1015.severity = error

# Opening attribute brackets should be spaced correctly
dotnet_diagnostic.SA1016.severity = error

# Closing attribute brackets should be spaced correctly
dotnet_diagnostic.SA1017.severity = error

# Nullable type symbols should be spaced correctly
dotnet_diagnostic.SA1018.severity = error

# Member access symbols should be spaced correctly
dotnet_diagnostic.SA1019.severity = error

# Increment decrement symbols should be spaced correctly
dotnet_diagnostic.SA1020.severity = error

# Negative signs should be spaced correctly
dotnet_diagnostic.SA1021.severity = error

# Positive signs should be spaced correctly
dotnet_diagnostic.SA1022.severity = error

# Dereference and access of symbols should be spaced correctly
dotnet_diagnostic.SA1023.severity = error

# Colons should be spaced correctly
dotnet_diagnostic.SA1024.severity = error

# Code should not contain multiple whitespace in a row
dotnet_diagnostic.SA1025.severity = error

# Code should not contain space after new or stackalloc keyword in implicitly typed array allocation
dotnet_diagnostic.SA1026.severity = error

# Use tabs correctly
dotnet_diagnostic.SA1027.severity = error

# Code should not contain trailing whitespace
dotnet_diagnostic.SA1028.severity = error

# Do not prefix calls with base unless local implementation exists
dotnet_diagnostic.SA1100.severity = error

# Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# Query clause should follow previous clause
dotnet_diagnostic.SA1102.severity = error

# Query clauses should be on separate lines or all on one line
dotnet_diagnostic.SA1103.severity = error

# Query clause should begin on new line when previous clause spans multiple lines
dotnet_diagnostic.SA1104.severity = error

# Query clauses spanning multiple lines should begin on own line
dotnet_diagnostic.SA1105.severity = error

# Code should not contain empty statements
dotnet_diagnostic.SA1106.severity = error

# Code should not contain multiple statements on one line
dotnet_diagnostic.SA1107.severity = error

# Block statements should not contain embedded comments
dotnet_diagnostic.SA1108.severity = error

# Block statements should not contain embedded regions
dotnet_diagnostic.SA1109.severity = none

# Opening parenthesis or bracket should be on declaration line
dotnet_diagnostic.SA1110.severity = error

# Closing parenthesis should be on line of last parameter
dotnet_diagnostic.SA1111.severity = error

# Closing parenthesis should be on line of opening parenthesis
dotnet_diagnostic.SA1112.severity = error

# Comma should be on the same line as previous parameter
dotnet_diagnostic.SA1113.severity = warning

# Parameter list should follow declaration
dotnet_diagnostic.SA1114.severity = warning

# Parameter should follow comma
dotnet_diagnostic.SA1115.severity = warning

# Split parameters should start on line after declaration
dotnet_diagnostic.SA1116.severity = warning

# Parameters should be on same line or separate lines
dotnet_diagnostic.SA1117.severity = warning

# Parameter should not span multiple lines
dotnet_diagnostic.SA1118.severity = error

# Statement should not use unnecessary parenthesis
dotnet_diagnostic.SA1119.severity = error

# Comments should contain text
dotnet_diagnostic.SA1120.severity = error

# Use built-in type alias
dotnet_diagnostic.SA1121.severity = error

# Use string.Empty for empty strings
dotnet_diagnostic.SA1122.severity = error

# Do not place regions within elements
dotnet_diagnostic.SA1123.severity = error

# Do not use regions
dotnet_diagnostic.SA1124.severity = error

# Use shorthand for nullable types
dotnet_diagnostic.SA1125.severity = error

# Prefix calls correctly
dotnet_diagnostic.SA1126.severity = none

# Generic type constraints should be on their own line
dotnet_diagnostic.SA1127.severity = error

# Put constructor initializers on their own line
dotnet_diagnostic.SA1128.severity = none

# Do not use default value type constructor
dotnet_diagnostic.SA1129.severity = error

# Use lambda syntax
dotnet_diagnostic.SA1130.severity = error

# Use readable conditions
dotnet_diagnostic.SA1131.severity = error

# Do not combine fields
dotnet_diagnostic.SA1132.severity = error

# Do not combine attributes
dotnet_diagnostic.SA1133.severity = error

# Attributes should not share line
dotnet_diagnostic.SA1134.severity = error

# Using directives should be qualified
dotnet_diagnostic.SA1135.severity = error

# Enum values should be on separate lines
dotnet_diagnostic.SA1136.severity = error

# Elements should have the same indentation
dotnet_diagnostic.SA1137.severity = error

# Use literal suffix notation instead of casting
dotnet_diagnostic.SA1139.severity = error

# Using directives should be placed correctly
dotnet_diagnostic.SA1200.severity = none

# Elements should appear in the correct order
dotnet_diagnostic.SA1201.severity = error

# Elements should be ordered by access
dotnet_diagnostic.SA1202.severity = error

# Constants should appear before fields
dotnet_diagnostic.SA1203.severity = error

# Static elements should appear before instance elements
dotnet_diagnostic.SA1204.severity = error

# Partial elements should declare access
dotnet_diagnostic.SA1205.severity = warning

# Declaration keywords should follow order
dotnet_diagnostic.SA1206.severity = error

# Protected should come before internal
dotnet_diagnostic.SA1207.severity = error

# System using directives should be placed before other using directives
dotnet_diagnostic.SA1208.severity = none

# Using alias directives should be placed after other using directives
dotnet_diagnostic.SA1209.severity = error

# Using directives should be ordered alphabetically by namespace
dotnet_diagnostic.SA1210.severity = error

# Using alias directives should be ordered alphabetically by alias name
dotnet_diagnostic.SA1211.severity = error

# Property accessors should follow order
dotnet_diagnostic.SA1212.severity = error

# Event accessors should follow order
dotnet_diagnostic.SA1213.severity = error

# Readonly fields should appear before non-readonly fields
dotnet_diagnostic.SA1214.severity = error

# Using static directives should be placed at the correct location
dotnet_diagnostic.SA1216.severity = error

# Using static directives should be ordered alphabetically
dotnet_diagnostic.SA1217.severity = error

# Element should begin with upper-case letter
dotnet_diagnostic.SA1300.severity = error

# Element should begin with lower-case letter
dotnet_diagnostic.SA1301.severity = none

# Interface names should begin with I
dotnet_diagnostic.SA1302.severity = error

# Const field names should begin with upper-case letter
dotnet_diagnostic.SA1303.severity = error

# Non-private readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1304.severity = error

# Field names should not use Hungarian notation
dotnet_diagnostic.SA1305.severity = none

# Field names should begin with lower-case letter
dotnet_diagnostic.SA1306.severity = error

# Accessible fields should begin with upper-case letter
dotnet_diagnostic.SA1307.severity = error

# Variable names should not be prefixed
dotnet_diagnostic.SA1308.severity = error

# Field names should not begin with underscore
dotnet_diagnostic.SA1309.severity = error

# Field names should not contain underscore
dotnet_diagnostic.SA1310.severity = none

# Static readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1311.severity = error

# Variable names should begin with lower-case letter
dotnet_diagnostic.SA1312.severity = error

# Parameter names should begin with lower-case letter
dotnet_diagnostic.SA1313.severity = error

# Type parameter names should begin with T
dotnet_diagnostic.SA1314.severity = error

# Access modifier should be declared
dotnet_diagnostic.SA1400.severity = none

# Fields should be private
dotnet_diagnostic.SA1401.severity = error

# File may only contain a single type
dotnet_diagnostic.SA1402.severity = error

# File may only contain a single namespace
dotnet_diagnostic.SA1403.severity = error

# Code analysis suppression should have justification
dotnet_diagnostic.SA1404.severity = error

# Debug.Assert should provide message text
dotnet_diagnostic.SA1405.severity = error

# Debug.Fail should provide message text
dotnet_diagnostic.SA1406.severity = error

# Arithmetic expressions should declare precedence
dotnet_diagnostic.SA1407.severity = error

# Conditional expressions should declare precedence
dotnet_diagnostic.SA1408.severity = error

# Remove unnecessary code
dotnet_diagnostic.SA1409.severity = none

# Remove delegate parenthesis when possible
dotnet_diagnostic.SA1410.severity = error

# Attribute constructor should not use unnecessary parenthesis
dotnet_diagnostic.SA1411.severity = error

# Store files as UTF-8 with byte order mark
dotnet_diagnostic.SA1412.severity = none

# Use trailing comma in multi-line initializers
dotnet_diagnostic.SA1413.severity = error

# Braces for multi-line statements should not share line
dotnet_diagnostic.SA1500.severity = error

# Statement should not be on a single line
dotnet_diagnostic.SA1501.severity = error

# Element should not be on a single line
dotnet_diagnostic.SA1502.severity = error

# Braces should not be omitted
dotnet_diagnostic.SA1503.severity = error

# All accessors should be single-line or multi-line
dotnet_diagnostic.SA1504.severity = error

# Opening braces should not be followed by blank line
dotnet_diagnostic.SA1505.severity = none

# Element documentation headers should not be followed by blank line
dotnet_diagnostic.SA1506.severity = error

# Code should not contain multiple blank lines in a row
dotnet_diagnostic.SA1507.severity = error

# Closing braces should not be preceded by blank line
dotnet_diagnostic.SA1508.severity = none

# Opening braces should not be preceded by blank line
dotnet_diagnostic.SA1509.severity = error

# Chained statement blocks should not be preceded by blank line
dotnet_diagnostic.SA1510.severity = error

# While-do footer should not be preceded by blank line
dotnet_diagnostic.SA1511.severity = error

# Single-line comments should not be followed by blank line
dotnet_diagnostic.SA1512.severity = error

# Closing brace should be followed by blank line
dotnet_diagnostic.SA1513.severity = error

# Element documentation header should be preceded by blank line
dotnet_diagnostic.SA1514.severity = error

# Single-line comment should be preceded by blank line
dotnet_diagnostic.SA1515.severity = error

# Elements should be separated by blank line
dotnet_diagnostic.SA1516.severity = none

# Code should not contain blank lines at start of file
dotnet_diagnostic.SA1517.severity = error

# Use line endings correctly at end of file
dotnet_diagnostic.SA1518.severity = error

# Braces should not be omitted from multi-line child statement
dotnet_diagnostic.SA1519.severity = error

# Use braces consistently
dotnet_diagnostic.SA1520.severity = error

# Elements should be documented
dotnet_diagnostic.SA1600.severity = none

# Partial elements should be documented
dotnet_diagnostic.SA1601.severity = none

# Enumeration items should be documented
dotnet_diagnostic.SA1602.severity = none

# Documentation should contain valid XML
dotnet_diagnostic.SA1603.severity = none

# Element documentation should have summary
dotnet_diagnostic.SA1604.severity = none

# Partial element documentation should have summary
dotnet_diagnostic.SA1605.severity = none

# Element documentation should have summary text
dotnet_diagnostic.SA1606.severity = none

# Partial element documentation should have summary text
dotnet_diagnostic.SA1607.severity = none

# Element documentation should not have default summary
dotnet_diagnostic.SA1608.severity = none

# Property documentation should have value
dotnet_diagnostic.SA1609.severity = none

# Property documentation should have value text
dotnet_diagnostic.SA1610.severity = none

# Element parameters should be documented
dotnet_diagnostic.SA1611.severity = none

# Element parameter documentation should match element parameters
dotnet_diagnostic.SA1612.severity = none

# Element parameter documentation should declare parameter name
dotnet_diagnostic.SA1613.severity = none

# Element parameter documentation should have text
dotnet_diagnostic.SA1614.severity = none

# Element return value should be documented
dotnet_diagnostic.SA1615.severity = none

# Element return value documentation should have text
dotnet_diagnostic.SA1616.severity = none

# Void return value should not be documented
dotnet_diagnostic.SA1617.severity = none

# Generic type parameters should be documented
dotnet_diagnostic.SA1618.severity = none

# Generic type parameters should be documented partial class
dotnet_diagnostic.SA1619.severity = none

# Generic type parameter documentation should match type parameters
dotnet_diagnostic.SA1620.severity = none

# Generic type parameter documentation should declare parameter name
dotnet_diagnostic.SA1621.severity = none

# Generic type parameter documentation should have text
dotnet_diagnostic.SA1622.severity = none

# Property summary documentation should match accessors
dotnet_diagnostic.SA1623.severity = none

# Property summary documentation should omit accessor with restricted access
dotnet_diagnostic.SA1624.severity = none

# Element documentation should not be copied and pasted
dotnet_diagnostic.SA1625.severity = none

# Single-line comments should not use documentation style slashes
dotnet_diagnostic.SA1626.severity = error

# Documentation text should not be empty
dotnet_diagnostic.SA1627.severity = error

# Documentation text should begin with a capital letter
dotnet_diagnostic.SA1628.severity = error

# Documentation text should end with a period
dotnet_diagnostic.SA1629.severity = error

# Documentation text should contain whitespace
dotnet_diagnostic.SA1630.severity = none

# Documentation should meet character percentage
dotnet_diagnostic.SA1631.severity = none

# Documentation text should meet minimum character length
dotnet_diagnostic.SA1632.severity = none

# File should have header
dotnet_diagnostic.SA1633.severity = none

# File header should show copyright
dotnet_diagnostic.SA1634.severity = none

# File header should have copyright text
dotnet_diagnostic.SA1635.severity = none

# File header copyright text should match
dotnet_diagnostic.SA1636.severity = none

# File header should contain file name
dotnet_diagnostic.SA1637.severity = none

# File header file name documentation should match file name
dotnet_diagnostic.SA1638.severity = none

# File header should have summary
dotnet_diagnostic.SA1639.severity = none

# File header should have valid company text
dotnet_diagnostic.SA1640.severity = none

# File header company name text should match
dotnet_diagnostic.SA1641.severity = none

# Constructor summary documentation should begin with standard text
dotnet_diagnostic.SA1642.severity = none

# Destructor summary documentation should begin with standard text
dotnet_diagnostic.SA1643.severity = none

# Documentation headers should not contain blank lines
dotnet_diagnostic.SA1644.severity = none

# Included documentation file does not exist
dotnet_diagnostic.SA1645.severity = none

# Included documentation XPath does not exist
dotnet_diagnostic.SA1646.severity = none

# Include node does not contain valid file and path
dotnet_diagnostic.SA1647.severity = none

# Inheritdoc should be used with inheriting class
dotnet_diagnostic.SA1648.severity = none

# File name should match first type name
dotnet_diagnostic.SA1649.severity = error

# Element documentation should be spelled correctly
dotnet_diagnostic.SA1650.severity = none

# Do not use placeholder elements
dotnet_diagnostic.SA1651.severity = none

# Do not prefix local calls with 'this.'
dotnet_diagnostic.SX1101.severity = error

# Field names should begin with underscore
dotnet_diagnostic.SX1309.severity = none

# Static field names should begin with underscore
dotnet_diagnostic.SX1309S.severity = none

# IDE0008: Use explicit type
dotnet_diagnostic.IDE0008.severity = error
